name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: private

    - name: Build Docker image
      run: |
        docker build -t my-project:latest .

    - name: Tag Docker image
      run: |
        docker tag my-project:latest 222320796601.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-project:latest

    - name: Push Docker image to ECR
      run: |
        docker push 222320796601.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-project:latest

    - name: Deploy to ECS
      run: |
        aws ecs update-service \
          --cluster my-cluster \
          --service my-service \
          --force-new-deployment \
          --image 222320796601.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-project:latest

    - name: Run integration tests
      run: |
       # Install dependencies if needed
       RUN pip3 install flask
       
    - name: Rollback if necessary
      if: failure()
      run: |
        echo "Rolling back to previous version..."
        # Replace with the previous image tag if known or retrieve it from metadata
        PREVIOUS_IMAGE_TAG="previous-tag"  # Replace with actual logic to get the previous tag
        aws ecs update-service \
          --cluster my-cluster \
          --service my-service \
          --force-new-deployment \
          --image ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-project:${PREVIOUS_IMAGE_TAG} \
          --region ${{ secrets.AWS_REGION }}
